name: Build and Test

on:
  push:
    branches: 
      - master

jobs: 
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: ls
      run: ls
    - name: configure
      run: sudo apt-get install python libglu1-mesa-dev libxrandr-dev libxi-dev
    - name: premake      
      run: ./tools/premake5/linux64/premake5 gmake
    - name: make
      run: make -j config=release_x64
    - name: Upload Binary
      uses: actions/upload-artifact@v2
      with:
        name: Binary_${{ github.run_number }}
        path: | 
          ./premake5.lua
          ./dist/bin/Release/*


  unit-test:
    strategy:
      matrix:
        asics: ["vega", "navi10"]
    runs-on: [self-hosted, linux, '${{ matrix.asics }}']
#    runs-on: [self-hosted, linux]
    needs: build-linux
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: Binary_${{ github.run_number }}
        path: ./
    - name: chmod
      run: chmod +x ./dist/bin/Release/x64
    - name: unit test
      run: ./dist/bin/Release/x64 --gtest_filter=-*test2* --gtest_output=xml:./result.xml
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: UnitTestResults_${{ github.run_number }}
        path: result.xml
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        check_name: Unit Test Results ${{ matrix.asics }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: ./*.xml

  unit-test1:
    runs-on: ubuntu-latest
    needs: build-linux
    strategy:
      matrix:
        commands: ["test0", "test1", "test2"]
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: Binary_${{ github.run_number }}
        path: ./
    - name: chmod
      run: chmod +x ./dist/bin/Release/x64
    - name: unit test
      run: ./dist/bin/Release/x64 --gtest_filter=*${{ matrix.commands }} --gtest_output=xml:./result.xml 
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: UnitTestResults_${{ matrix.commands }}_${{ github.run_number }}
        path: result.xml
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        check_name: Unit Test Results ${{ matrix.commands }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: ./*.xml
  
  publish-results:
    runs-on: ubuntu-latest
    needs: [unit-test]
    if: success() || failure()
    
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: UnitTestResults_${{ github.run_number }}
        path: ./
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: ./*.xml

